name: Test

on: [push, pull_request]

jobs:
  build:
    name: build (Python ${{ matrix.python-version }}, Django ${{ matrix.django-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
        django-version: ['3.2', '4.0', '4.1', 'main']
        postgres-version: ['11', '12']
        mariadb-version: ['10.3', '10.4']
        exclude:
          # Django >=4.0 drops support for python 3.7 (https://docs.djangoproject.com/en/4.1/faq/install/)
          - python-version: '3.7'
            django-version: '4.0'
          - python-version: '3.7'
            django-version: '4.1'
          - python-version: '3.7'
            django-version: 'main'

          # Django <=4.0 doesn't support python 3.11 (https://docs.djangoproject.com/en/4.1/faq/install/)
          - python-version: '3.11'
            django-version: '3.2'
          - python-version: '3.11'
            django-version: '4.0'

          # only test Django dev with PostgreSQL 12 and MariaDB 10.4
          - django-version: '3.2'
            postgres-version: '12'
          - django-version: '3.2'
            mariadb-version: '10.4'
          
          - django-version: '4.0'
            postgres-version: '12'
          - django-version: '4.0'
            mariadb-version: '10.4'

          - django-version: '4.1'
            postgres-version: '12'
          - django-version: '4.1'
            mariadb-version: '10.4'

          - django-version: 'main'
            postgres-version: '11'
          - django-version: 'main'
            mariadb-version: '10.3'

    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mariadb:
        image: mariadb:${{ matrix.mariadb-version }}
        env:
          MYSQL_ROOT_PASSWORD: mysql
          MYSQL_DATABASE: mysql
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 3306:3306

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key:
          ${{ matrix.python-version }}-v1-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/tox.ini') }}
        restore-keys: |
          ${{ matrix.python-version }}-v1-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade tox tox-gh-actions

    - name: Tox tests
      run: |
        tox -v
      env:
        DJANGO: ${{ matrix.django-version }}

    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        name: Python ${{ matrix.python-version }}
